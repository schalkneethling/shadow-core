---
type User = {
  firstName: string;
  lastName: string;
  avatarURL: string;
  role: string;
  email: string;
  phone: string;
  bluesky: string;
  linkedin: string;
  mastodon: string;
};

const response = await fetch(
  "https://fictionalfolks.netlify.app/.netlify/functions/users?count=2"
);

let users;
if (response.ok) {
  users = await response.json();
}
---

<nimbus-team></nimbus-team>

<template id="nimbus-team-user-card-tmpl">
  {
    users.length &&
      users.map((user: User) => {
        return (
          <li>
            <article class="user-card">
              <h2 class="user-card-title">
                {user.firstName} {user.lastName}
              </h2>

              <img
                class="user-card-avatar"
                src={user.avatarURL}
                height="150"
                width="150"
                alt=""
              />

              <span class="user-card-role">{user.role}</span>

              <span class="user-card-email">
                <span class="visually-hidden">Email:</span>
                <a href={`mailto:${user.email}`}>{user.email}</a>
              </span>

              <span class="user-card-phone">
                <span class="visually-hidden">Phone:</span>
                <a href="">{user.phone}</a>
              </span>

              <ul class="user-card-social">
                <li>
                  <a
                    class="icon icon-social-bsky"
                    href={user.bluesky}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <span class="visually-hidden">
                      Follow {user.firstName} on Bluesky
                    </span>
                  </a>
                </li>
                <li>
                  <a
                    class="icon icon-social-linkedin"
                    href={user.linkedin}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <span class="visually-hidden">
                      Follow {user.firstName} on LinkedIn
                    </span>
                  </a>
                </li>
                <li>
                  <a
                    class="icon icon-social-mastodon"
                    href=""
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <span class="visually-hidden">
                      Follow {user.firstName} on Mastodon
                    </span>
                  </a>
                </li>
              </ul>
            </article>
          </li>
        );
      })
  }
</template>

<script>
  class NimbusTeam extends HTMLElement {
    static #selectors = {
      UserCardTmpl: "nimbus-team-user-card-tmpl",
    };

    #shadow;

    constructor() {
      super();
      this.#shadow = this.attachShadow({ mode: "open" });
      this.#loadCSS();
    }

    connectedCallback() {
      const template = document.getElementById(
        NimbusTeam.#selectors.UserCardTmpl
      ) as HTMLTemplateElement;

      if (template) {
        const listContainer = document.createElement("ul");
        const content = template.content.cloneNode(true);

        listContainer.classList.add("card-list");

        listContainer.appendChild(content);
        this.#shadow.appendChild(listContainer);
      }
    }

    /**
     * Asynchronously loads a CSS file and appends it's content to the shadow DOM.
     *
     * This method creates a <style> element, fetches the CSS content from the specified URL,
     * and appends the CSS content to the shadow DOM if the fetch request is successful.
     *
     * @private
     * @async
     * @returns {Promise<void>} A promise that resolves when the CSS is loaded and appended.
     */
    async #loadCSS() {
      const style = document.createElement("style");
      const response = await fetch("/styles/user-card.css");

      if (response.ok) {
        style.textContent = await response.text();
        this.#shadow.appendChild(style);
      }
    }
  }

  customElements.define("nimbus-team", NimbusTeam);
</script>
